let createWriteStream,parse,join,URL,v4;_bf4‍.x([["default",()=>_bf4‍.o]]);_bf4‍.w("fs",[["createWriteStream",["createWriteStream"],function(v){createWriteStream=v}]]);_bf4‍.w("path",[["parse",["parse"],function(v){parse=v}],["join",["join"],function(v){join=v}]]);_bf4‍.w("../../config",[["URL",["URL"],function(v){URL=v}]]);_bf4‍.w("uuid",[["v4",["v4"],function(v){v4=v}]]);



_bf4‍.d({
  Query: {
    Info: () => "Im am file Uploader",
  },
  Mutation: {
    UploadFile: async (_, { file }, context, info) => {
      try {
        let { filename, createReadStream } = await file;

        let steam = createReadStream();

        let name = v4() + "_" + filename;
        let serverFile = join(__dirname, "..", "..", "..", "uploads", name);
        let writeSteam = createWriteStream(serverFile);
        await steam.pipe(writeSteam);
        serverFile = join(URL, "uploads", name);
        return serverFile;
      } catch (error) {
        throw new Error(error.message);
      }
    },
  },
});
